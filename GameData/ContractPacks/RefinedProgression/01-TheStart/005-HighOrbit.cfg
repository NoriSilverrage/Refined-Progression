//--
//------ Refined Progression Contracts
//--
//---The Start

//--First High Orbit
CONTRACT_TYPE
{
    name = HighOrbit
    group = RefinedProgression

    title = Achieve High Orbit
    description = "RandomKerbalName(Female) has posited the idea that if we obtain a orbit past @/altkm kilometers we will get different readings than that of lower orbits."
    synopsis = Orbit at @/altkm kilometers
    completedMessage = Look at that view and my are these readings interesting.

    agent = Experimental Astrophysics Group
    
    minExpiry = 426.0
    maxExpiry = 426.0
    cancellable = false
    declinable = false
    prestige = Trivial
    targetBody = HomeWorld()
    maxCompletions = 1
    maxSimultaneous = 1
    rewardScience = 12.0
    rewardReputation = 40.0 / @targetBody.Multiplier()
    rewardFunds = 40000 / @targetBody.Multiplier()
    failureFunds = 10000 / @targetBody.Multiplier()
    advanceFunds = 10000 / @targetBody.Multiplier()

    DATA
    {
        type = double
        altkm = @targetBody.SpaceAltitudeThreshold()/1000
    }
    
    REQUIREMENT
    {
        name = Any
        type = Any
        
        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = CrewedOrbit
        }
        
        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = UnmannedOrbit
        }
    }
    
    
    PARAMETER
    {
        name = HighOrbit
        type = VesselParameterGroup
        define = HighOrbiter
        title = High Orbit of @/targetBody
        
        PARAMETER
        {
            name = NewVessel
            type = NewVessel
        }
        
        PARAMETER
        {
            name = Orbit
            type = Orbit
            situation = ORBITING
            minAltitude = @/targetBody.SpaceAltitudeThreshold()
            disableOnStateChange = true
            
            PARAMETER
            {
                name = Duration
                type = Duration
                duration = 2d
                
                preWaitText = Orbiting for two days will provide us with some valuable data.
                waitingText = One more day should do.
                completionText = Excellent, this will be very helpful.
                rewardFunds = 5000 / @/targetBody.Multiplier()
                rewardScience = 2 / @/targetBody.Multiplier()
            }
        }
        
        PARAMETER
        {
            name = ReturnHome
            type = ReturnHome
            completeInSequence = true
        }
    }

    BEHAVIOUR
    {
        name = AwardExperience
        type = AwardExperience
        parameter = HighOrbit
        experience = 2 / @/targetBody.Multiplier()
    }
}
