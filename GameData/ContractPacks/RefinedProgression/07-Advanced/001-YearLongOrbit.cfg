//--
//------ Refined Progression Contracts
//--
//--- Advanced/Repeatable contracts


//--Year Long Manned Orbit
CONTRACT_TYPE
{
    name = YearLongOrbit
	group = Routinely

	title = One year in Space
	description = We don't know what the long term effects of being in space are. Send someone to orbit for a year to see. Might provide some valuable experience when completed.
	notes = You are required to have @/crewcount Kerbals orbit for 1 year with a New Vessel that has at least @/crewcount*2 crew capacity. This could be a newly launched Space Station as you aren't required to bring the Kerbals home.
	
	synopsis = Orbit a manned vessel for one whole year.
	completedMessage = Excellent job. I'm sure that we will learn something worthwhile from this. And look all of our crewed gained valuable experience.

	agent = Experimental Astrophysics Group
	
	deadline = 852
	prestige = Significant
	targetBody = HomeWorld()
	maxSimultaneous = 1
	rewardScience = (@/crewcount * 5) / @targetBody.Multiplier()
	rewardReputation = (@/crewcount * 15) / @targetBody.Multiplier()
	rewardFunds = 100000 / @targetBody.Multiplier() + @/fundness
	failureFunds = 50000 / @targetBody.Multiplier() + @/fundness / 4
	advanceFunds = 50000 / @targetBody.Multiplier() + @/fundness / 4

	REQUIREMENT
	{
		name = All
		type = All
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = LongOrbit
		}
		
		REQUIREMENT
		{
			type = CompleteContract
			contractType = YearLongOrbit
			minCount = 0
			cooldownDuration = 7d
		}
	}
	
	DATA
	{
		type = int
		crewcount = Random(2,8)
	}
	
	DATA
	{
		type = double
		fundness = (50000 * @/crewcount) / @targetBody.Multiplier()
	
	}
	
	
	PARAMETER
	{
		name = YearLongOrbit
		type = VesselParameterGroup
		
		title = Long manned orbit
		notes = Orbit for 1 whole year. Kerbal's like their space and might get stir crazy if there isn't enough.
		duration = 1y
		
		PARAMETER
		{
			name = NewVessel
			type = NewVessel
		}
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = @/crewcount
			maxCrew = @/crewcount
		}
		
		PARAMETER
		{
			name = HasCrewCapacity
			type = HasCrewCapacity

			minCapacity = @/crewcount * 2
			title = Minimum crew capacity of @minCapacity. A year in space is no picnic, so lets make sure they have room to spare.
		}
		
		PARAMETER
		{
			name = Orbit
			type = Orbit
			minPeA = @targetBody.AtmosphereAltitude() * 2
		}
		
	}
	
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
		parameter = YearLongOrbit
		experience = (2 * @/crewcount) / @targetBody.Multiplier()
	}
}