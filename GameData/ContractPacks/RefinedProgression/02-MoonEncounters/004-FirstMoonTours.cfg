//--
//------ Refined Progression Contracts
//--
//---Moon Missions (Mun/Minmus or Serran/Aptur/Mun or etc...)

//--Moon orbits with optional landing
CONTRACT_TYPE
{
    name = MoonOrbitTours
    group = CloseExplorer
    
    title = Orbit @targetBody
    genericTitle = ..
    description = ...
    genericDescription = ..
    synopsis = ...
    completedMessage = Stupendous job! This is a great step for all Kebalkind.

    agent = Experimental Astrophysics Group

    deadline = 213
    prestige = Exceptional
    targetBody = @/validTarget
    maxSimultaneous = 1
    rewardScience = 8.0
    rewardReputation = 16.0
    rewardFunds = 60000
    failureFunds = 15000
    failureReputation = 8.0
    advanceFunds = 15000
    
    DATA
    {
        type = bool
        homeIsPlanet = HomeWorld().Parent() == Sun
    }

    DATA
    {
        type = CelestialBody
        title = Moon Tour
        uniquenessCheck = CONTRACT_ACTIVE
        validTarget = @/homeIsPlanet ? HomeWorld().Children().Where(cb => cb.HaveReached() && cb.HaveLandedOn() == false).Random() : HomeWorld().Parent().Children().Where(cb => cb.HaveReached() && cb.HaveLandedOn() == false && cb.IsHomeWorld() == false).Random()
    }
    
    DATA
    {
        type = VesselIdentifier
        theVessel = "tourmoonorbiter"+"@targetBody"
    }
     
    REQUIREMENT
    {
        name = Any
        type = Any
        
        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = EscapeHomeWorld
        }
        
        REQUIREMENT
        {
            name = CompleteContract
            type = CompleteContract
            contractType = UMEscapeHomeworld
        }
		
		//Add for orbit
    }
    
    PARAMETER
    {
        name = MoonOrbit
        type = VesselParameterGroup
        define = @/theVessel
        duration = 60m
        title = Achieve orbit of @targetBody
        
        PARAMETER
        {
            name = HasCrew
            type = HasCrew
            minCrew = 1
        }
        
        PARAMETER
        {
            name = Orbit
            type = Orbit
            maxApA = @targetBody.SpaceAltitudeThreshold() * 2
        }
    }

    PARAMETER
    {
        name = ReturnHome
        type = ReturnHome
		completeInSequence = true
    }

    BEHAVIOUR
    {
        name = AwardExperience
        type = AwardExperience
    
        parameter = MoonOrbit
        experience = 1 / @targetBody.Multiplier()
    }
}