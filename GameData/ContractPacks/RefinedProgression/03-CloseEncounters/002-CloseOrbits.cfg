//--
//------ Refined Progression Contracts
//--
//---Close Planets (ie. Duna/Eve)

//--Close Planet Orbits and Landing
CONTRACT_TYPE
{
    name = CloseOrbits
	group = CloseExplorer
	
	title = Orbit and potentially land on @targetBody
	description = It's great that we have been to @targetBody but it's not enough. There is so much more to learn about it. So we'd like you to send someone into orbit. If you feel like it we will give a bonus for landing.
	synopsis = Orbit and return from @targetBody.
	completedMessage = Jeb check out the view. Jeb... Jeb?

	agent = Experimental Astrophysics Group

	prestige = Exceptional
	targetBody = @/validTarget
	weight = 4.0
	maxSimultaneous = 2
	rewardScience = 8.0
	rewardReputation = 16.0
	rewardFunds = 40000
	failureFunds = 20000
	failureReputation = 8.0
	advanceFunds = 20000

	DATA
    {
        type = bool
        homeIsPlanet = HomeWorld().Parent() == Sun
    }
	
    DATA
    {
        type = double
        sma = @homeIsPlanet ? HomeWorld().SemiMajorAxis() : HomeWorld().Parent().SemiMajorAxis()
		smamin = @/sma * 0.5
		smamax = @/sma * 1.6
    }

    DATA
    {
        type = CelestialBody
		activeUniqueValue = true
        validTarget = AllBodies().Where(cb => cb.SemiMajorAxis() < @/smamax && cb.SemiMajorAxis() > @/smamin && cb.IsPlanet() && cb.HaveReached() && cb.HaveLandedOn() == false && cb.IsHomeWorld() == false).Random()
    }
	
	REQUIREMENT
	{
		name = Any
		type = Any
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = EscapeHomeWorld
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = UMEscapeHomeworld
		}
	}
	
	REQUIREMENT
	{
		name = Any
		type = Any
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = FirstOrbits
		}
		
		REQUIREMENT
		{
			name = CompleteContract
			type = CompleteContract
			contractType = FirstLandings
		}
	}
	
	PARAMETER
	{
		name = CloseOrbit
		type = VesselParameterGroup
		title = Achieve orbit of @targetBody
		
		PARAMETER
		{
			name = HasCrew
			type = HasCrew
			minCrew = 1
		}
		
		PARAMETER
		{
			name = Orbit
			type = Orbit
			maxApA = @targetBody.SpaceAltitudeThreshold() * 2
			
			PARAMETER
			{
				name = Duration
				type = Duration
				duration = 1h
				
				preWaitText = Orbit for 1 hour
				waitingText = Just a while longer
				completionText = Task completed.
				rewardFunds = 5000 / @targetBody.Multiplier()
			}
		}
		
		PARAMETER
		{
			name = ReturnHome
			type = ReturnHome
			completeInSequence = true
		}
	}
	
	PARAMETER
	{
		name = SpaceScience
		type = CollectScience
		optional = true
		completeInSequence = true
		rewardFunds = 5000
		
		location = Space
		notes = (Optional) Collect several science experiements for a bonus.
		experiment = evaReport
		experiment = temperatureScan
		experiment = crewReport
		experiment = mysteryGoo
		
		recoveryMethod = RecoverOrTransmit
	}

	PARAMETER
	{
		name = ForLanding
		type = All
		optional = true
		completeInSequence = true
		title = (Optional) Collect EVA Report, Temperature, Crew Report, and Mystery Goo for bonus. Landing also gives a bonus.
		
		REQUIREMENT
		{
			name = Expression
			type = Expression
			expression = @targetBody.HasSurface() == true
		}
		
		PARAMETER
		{
			name = Landing
			type = ReachState
			notes = (Optional) You can land if you want. More funds apply. Also get more boosters!
			situation = LANDED
			rewardFunds = 30000
			rewardReputation = 10
		}
		
		PARAMETER
		{
			name = SurfaceScience
			type = CollectScience
			rewardFunds = 10000
			rewardReputation = 5
			
			location = Surface
			notes = (Optional) Collect several science experiements for a bonus (funds, rep and XP).
			experiment = evaReport
			experiment = temperatureScan
			experiment = crewReport
			experiment = mobileMaterialsLab
			experiment = mysteryGoo
			
			recoveryMethod = RecoverOrTransmit
		}
	}
		
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
	
		parameter = SurfaceScience
		experience = 2 / @targetBody.Multiplier()
	}
	
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
	
		parameter = Landing
		experience = 2 / @targetBody.Multiplier()
	}
	
	BEHAVIOUR
	{
		name = AwardExperience
		type = AwardExperience
	
		parameter = SpaceScience
		experience = 1 / @targetBody.Multiplier()
	}

}